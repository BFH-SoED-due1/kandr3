		-------------
		Deliverable 3
		-------------
		Eric Dubuis
		-------------
		November 18, 2016; updated December 11, 2016


Deliverable 3

* Introduction

	This document describes the tasks to be performed for, and the constituents
of, the Deliverable 3. Such a document would usually not exist in a real
project documentation. (Similar information would be found elsewhere, for
example, in the Iteration Plan document, however.)

		[Note:]	Do not edit or modify this document. This document is
				managed by your lecturer.


* Goals

	The goals for this sprint are:

	*	To organize a sprint in terms of product backlog, sprint backlog/tasks

			*	Product backlog organization

			*	Tasks and task allocations.

			*	Team collaboration.

			*	Working with Git (branches, team efforts, merging, ...)

	*	To deliver a well-structured software in terms of good package design.

	*	To deliver a (sketch of a) solution for object persistence.

	*	To deliver a (sketch of a) solution for the user interface based on Vaadin.

	*	To deliver tested code.


	[]

* Your Tasks

	These are the effective task you'll have to provide for this sprint:

	*	Organize your product backlog (PL, as in previous sprints):

			* PL item prioritization

			* PL item grooming

			* PL item "best-guess" estimation

	*	Organize your sprint:
	
			* Fix the list of PB items for this sprint

			* Split larger PB items into tasks

			* Provide task "best-guess" estimations

	*	Update any documents you have so far, if needed

	*	Structure your code in packages by respecting the SOLID design principles

	*	Provide object persistence; the use of JPA is recommended. (Other approaches are okay, too.)

	*	Provide code for selected user stories (or parts thereof)

			* Production Java interfaces and classes

			* JUnit test classes for the application logic and persistence (not necessarily for the user interface)

	[]


* Components of this Deliverable

	The deliverable for this sprint shall encompass:

	*	The product backlog at the beginning of the sprint

	*	The sprint backlog items / task list
	
	*	The list of finished sprint backlog items / tasks

	*	Stable structure in terms of Java packages respecting the SOLID design principles

	*	Production Java interfaces and classes for logical and persistence layer

	*	JUnit test classes, coverage: 95% (UI components excluded)

	*	Run <<<mvn clean package>>> and check the following reports (and act accordingly):

			* The test coverage (JaCoCo) report

			* The JDepend report

			* The Checkstyle report

	[]



* Evaluation

	50 points at most per team member are attributed to this deliverable. Points may
not be equally distributed among team members. (However, this is the goal.)

*-------------------------------------------+---------------*-----------------*
| Item										| Max. points	| Points received |
*-------------------------------------------+---------------*-----------------*
| Product backlog items at the beginning\	| 		 6		| 		 6		  |
| COMMENTS:\								| 				| 				  |
| - Okay									| 				| 				  |
*-------------------------------------------+---------------*-----------------*
| Sprint backlog items / tasks and their states\ | 	6		| 		 4		  |
| COMMENTS:\								| 				| 				  |
| - Combined with product backlog\			| 				| 				  |
| - Estimates missing (-2)					| 				| 				  |
*-------------------------------------------+---------------*-----------------*
| Package structure meets SOLID principles, JDepend\ | 8	| 		 8		  |
| COMMENTS:\								| 				| 				  |
| - Okay									| 				| 				  |
*-------------------------------------------+---------------*-----------------*
| Production classes and interfaces\		| 		 8		| 		 6		  |
| COMMENTS:\								| 				| 				  |
| - Package names: use small letters\ 		| 				| 				  |
| - UI: No progress (-2)\ 					| 				| 				  |
| - Rest: Okay 								| 				| 				  |
*-------------------------------------------+---------------*-----------------*
| Working infrastructure with persistence\	| 		 8		| 		 8		  |
| COMMENTS:\								| 				| 			  	  |
| - When using MySQL: Add driver as Maven dependency\ | 	| 				  |
| - Using H2 in-memory database is recommended | 			| 				  |
*-------------------------------------------+---------------*-----------------*
| JUnit tests, code coverage\				| 		 8		| 		 2		  |
| COMMENTS:\								| 				| 			  	  |
| - Unit test CreateResourceTest.testCreate() fails (-2)\ | | 				  |
| - Bad coverage (-4)						| 				| 				  |
*-------------------------------------------+---------------*-----------------*
| Checkstyle report\						| 		 6		| 		 2		  |
| COMMENTS:\								| 				| 			  	  |
| - Many Checkstyle errors 					| 				| 				  |
|   (set up IDE to automatically fix them) 	| 				| 				  |
*-------------------------------------------+---------------*-----------------*
| Miscellaneous\							| 				| 		 -2		  |
| COMMENTS:\								| 				| 			  	  |
| - Errors in JavaDoc comment (-2)			| 				| 				  |
*-------------------------------------------+---------------*-----------------*
| Total										| 		50		| 		34		  |
*-------------------------------------------+---------------*-----------------*
Distribution of points for this deliverable.


* Deadline

	This deliverable is due: See {{{./sprints.html}Sprint Plan}}.

	[Note:]	Deadline is Friday evening. However, you can provide
			your deliverable till the following Sunday evening, 12 pm.
